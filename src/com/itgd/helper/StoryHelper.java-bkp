package com.itgd.helper;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.itgd.utils.DbConnection;
import com.itgd.dto.StoryDTO;
import com.itgd.dto.ContentListDTO;
import com.itgd.utils.Constants;

public class StoryHelper {
	public static ArrayList storyDetail(int storyId, int publishedStatus) throws Exception
	{
		//System.out.println("Story "+storyId + "----ststus--"+publishedStatus);

		Connection connection = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		PreparedStatement pstmt1 = null;
		ResultSet rs1 = null;
		PreparedStatement pstmt_issue=null;
		ResultSet rs_issue = null;
		ArrayList storyData = new ArrayList();
		String storyStatus = "";
		if(publishedStatus==1)
			storyStatus = " and c.state=1 ";
		
	    int primaryCategoryLength = 0;
	    String primaryCategory = "0";
	    String primaryCategoryId[] = null;
		
		try {
			DbConnection connect = null;
			connect = DbConnection.getInstance("indiatoday");
			connection = connect.getConnection("indiatoday");
	    	String sql = "SELECT c.id, c.sef_url, c.issueid as issueid,c.primary_category, c.title_alias, c.byline, c.city, c.courtesy, c.fulltext, " +
	    			"c.metadesc, c.metakey, date_format( c.created,'%W, %M %e, %Y') AS crt, date_format(c.created,'%H:%i') AS ctime, c.large_kicker_image, " +
	    			"c.kicker_image_caption, c.large_kicker_image_alt_text FROM jos_content c, jos_article_section a " +
	    			"WHERE c.id = ? and a.article_id=c.id and c.published=1 group by c.id";
	    	//System.out.println("Story Detail ->"+sql);
	    	pstmt = connection.prepareStatement(sql);
	        pstmt.setInt(1, storyId);
	        //pstmt.setInt(2, storyStatus);
	        rs = pstmt.executeQuery ();
	    	//System.out.println("Story Detail 111->");
			while (rs.next ()){
		        StoryDTO sDTO = new StoryDTO();
		        sDTO.setId(rs.getInt("id"));
		    	//System.out.println("Story Detail ->"+rs.getInt("id"));
		        sDTO.setFullDescription(rs.getString("fulltext")==null?"":rs.getString("fulltext").replaceAll("\\{mosimage\\}", "").replaceAll("\\{table\\}", "").replaceAll("\\{mospagebreak\\}", "").replaceAll("\\{quote\\}", "").replaceAll("\\{blurb\\}", ""));
		        sDTO.setTitleAlias(rs.getString("title_alias")==null?"":rs.getString("title_alias"));		       
		        sDTO.setByline(rs.getString("byline")==null?"":rs.getString("byline")); 
		        sDTO.setCity(rs.getString("city")==null?"":rs.getString("city"));
		        sDTO.setIssueId(rs.getInt("issueid"));
		        sDTO.setSefTitle(rs.getString("sef_url")==null?"":rs.getString("sef_url"));
		        sDTO.setCreatedDate(rs.getString("crt") == null ? "" : rs.getString("crt"));
		        sDTO.setCreatedTime(rs.getString("ctime") == null ? "" : rs.getString("ctime"));
		        sDTO.setMetaKeyword(rs.getString("metakey")==null?"":rs.getString("metakey"));
		        sDTO.setMetaDescription(rs.getString("metadesc")==null?"":rs.getString("metadesc"));
		        sDTO.setCourtesy(rs.getString("courtesy") == null ? "" : rs.getString("courtesy"));
		        sDTO.setLargeKickerImage(rs.getString("large_kicker_image")== null?"":rs.getString("large_kicker_image"));
		        sDTO.setLargeKickerImageCaption(rs.getString("kicker_image_caption") == null ? "" : rs.getString("kicker_image_caption"));
		        sDTO.setLargeKickerImageAltText(rs.getString("large_kicker_image_alt_text") == null ? "" : rs.getString("large_kicker_image_alt_text"));
	        	sDTO.setPrimaryCategory(rs.getString("primary_category") == null ? "0" : rs.getString("primary_category"));
		        primaryCategory = rs.getString("primary_category");
		        
		    	//System.out.println("Story 1"+primaryCategory);
		    	try { 
			        if(primaryCategory != null && primaryCategory.trim().length() > 0 ){
				    	//System.out.println("Story 2");
					    if((primaryCategory.indexOf("#") > 0) && (primaryCategory.lastIndexOf("#") < primaryCategory.trim().length())) {
					    	primaryCategoryId = primaryCategory.split("#");
					    	primaryCategoryLength = primaryCategoryId.length;
					    	//System.out.println("PCAT length - "+pcatlength);
					    } else {
					    	primaryCategoryId = new String[1];
					    	primaryCategoryId[0] = primaryCategory;
					    }
				    	primaryCategoryLength = primaryCategoryId.length;
				    	String sql1 = "select js.id as jsid, js.title as jstitle, js.sef_url as jssefurl ";
				    	if(primaryCategoryLength==1) {
							sql1 = sql1 + " from jos_sections js where js.id="+primaryCategoryId[0];
				    	}
				    	if(primaryCategoryLength==2) {
							sql1 = sql1 + ", jc.title as jctitle, jc.id as jcid, jc.sef_url as jcsefurl " +
									"from jos_categories jc, jos_sections js where jc.id="+primaryCategoryId[1]+" and jc.section=js.id";
				    	}
				    	if(primaryCategoryLength==3) {
							sql1 = sql1 + ", jc.title as jctitle, jc.id as jcid, jc.sef_url as jcsefurl, jsc.title as jsctitle, jsc.id as jscid, jsc.sef_url as jscsefurl " +
									"from jos_subcategories jsc, jos_sections js, jos_categories jc where jsc.id="+primaryCategoryId[2]+" and  jsc.category=jc.id and jsc.section=js.id";
				    	}
				    	if(primaryCategoryLength==4) {
							sql1 = sql1 + ", jc.title as jctitle, jc.id as jcid, jc.sef_url as jcsefurl,  jsc.title as jsctitle, jsc.id as jscid, jsc.sef_url as jscsefurl, jssc.title as jssctitle, jssc.id as jsscid, jssc.sef_url as jsscsefurl " +
									"from jos_sub_subcategories jssc, jos_sections js, jos_categories jc, jos_subcategories jsc where jssc.id="+primaryCategoryId[3]+" and jssc.section=js.id and jssc.category=jc.id and jssc.sub_category=jsc.id";
				    	}
				    	//System.out.println("Story Primary Detail ->"+sql1);

				    	pstmt1 = connection.prepareStatement(sql1);
				    	rs1 = pstmt1.executeQuery();
						while (rs1.next ()){
							//System.out.println("primaryCategoryLength ->"+primaryCategoryLength);
							sDTO.setSectionId(rs1.getInt("jsid"));
				        	sDTO.setSectionTitle(rs1.getString("jstitle"));
				        	sDTO.setSectionSefTitle(rs1.getString("jssefurl"));
				        	
				        	if(primaryCategoryLength >= 2) {
					        	sDTO.setCategoryId(rs1.getInt("jcid"));
					        	sDTO.setCategoryTitle(rs1.getString("jctitle"));
					        	sDTO.setCategorySefTitle(rs1.getString("jcsefurl"));
					    	} 
				        	if(primaryCategoryLength >= 3) {
					        	sDTO.setSubCategoryId(rs1.getInt("jscid"));
					        	sDTO.setSubCategoryTitle(rs1.getString("jsctitle"));
					        	sDTO.setSubCategorySefTitle(rs1.getString("jscsefurl"));
					    	} 
				        	if(primaryCategoryLength == 4) {
					        	sDTO.setSubSubCategoryId(rs1.getInt("jsscid"));
					        	sDTO.setSubSubCategoryTitle(rs1.getString("jssctitle"));
					        	sDTO.setSubSubCategorySefTitle(rs1.getString("jsscsefurl"));
					    	}
						}
			        }
				} catch (Exception e) {
					System.out.println("StoryHelper articleDetail Primary Category Detail Exception is :" + e.toString());
				}
		        
		        sDTO.setPrimaryCategoryLength(primaryCategoryLength); 
		        
		        int issueId = rs.getInt("issueid");  
                if(issueId > 0)
                {
                    sql = "select name as issuedate from jos_magazine_categories  where id="+issueId+"";
                    pstmt_issue = connection.prepareStatement(sql);
                    rs_issue = pstmt_issue.executeQuery();
                    //System.out.println("StoryHelper after while loop"+issueId);
                    while(rs_issue.next()){
                    	sDTO.setIssueDate(rs_issue.getString("issuedate") == null ? "" : rs_issue.getString("issuedate"));                    	
                    	
                    }
                }
			
		        storyData.add(sDTO);
			}
		} catch (Exception e) {
			System.out.println("StoryHelper articleDetail Exception is :" + e);
		} finally {
			if(rs!=null)
				rs.close();
			if(pstmt!=null)
				pstmt.close();
			if(rs1!=null)
				rs1.close();
			if(pstmt1!=null)
				pstmt1.close();
			if(connection!=null)
				connection.close();
		}
		return storyData;
	}

	public static ArrayList GetNextPreviousArticle(String categoryid, int contentId) throws Exception
	{
		//System.out.println("- "+categoryid+"-- "+contentId);
		Connection pnconn = null;
		PreparedStatement pstmt = null;
		ResultSet rs=null;
		ContentListDTO sb = null;
		ArrayList moreContentData = new ArrayList();
		int pcatlength = 0;
		int contentIdOrdering = 0;
		int contentMaxOrdering = 0;
		
		String pcatids[] = null;
		categoryid = categoryid.replaceAll("~","#");
	    if(categoryid.indexOf("#") > 0) {
	    	pcatids = categoryid.split("#");
		} else {
			pcatids = new String[1];
    		pcatids[0] = categoryid;
		}
    	pcatlength = pcatids.length;
    	String catIdCondition = "";
		if(pcatlength==1)
			catIdCondition = " where a.section_id=" + pcatids[0];
		else if(pcatlength==2) 
			catIdCondition = " where a.section_id=" + pcatids[0] + " and a.cat_id=" + pcatids[1];
		else if(pcatlength==3) 
			catIdCondition = " where a.section_id=" + pcatids[0] + " and a.cat_id=" + pcatids[1] + " and a.subcat_id=" + pcatids[2];
		else if(pcatlength==4) 
			catIdCondition = " where a.section_id=" + pcatids[0] + " and a.cat_id=" + pcatids[1] + " and a.subcat_id=" + pcatids[2] + " and a.sub_subcat_id=" + pcatids[3];

		try {
			DbConnection connect = DbConnection.getInstance("indiatoday");
			pnconn = connect.getConnection("indiatoday");
			
			String sql = "select a.ordering, a.article_id from jos_content c, jos_article_section a ";
				sql = sql + catIdCondition;
				sql = sql + " and a.article_id="+contentId+" and a.article_id=c.id group by c.id";
			
			//System.out.println("Previous Next Content for specific content Query --> " + sql);
			pstmt = pnconn.prepareStatement(sql);
			rs = pstmt.executeQuery(sql);				
			while (rs.next()) {
				contentIdOrdering = rs.getInt("ordering");
			}
				
			if(contentIdOrdering>0) {
			  	sql="select c.id, c.title, c.sef_url, a.ordering from jos_content c,jos_article_section a ";
				sql = sql + catIdCondition;
	  			//sql = sql + " and a.article_id=c.id and c.published=1 and a.section_id=s.id and a.ordering < "+contentIdOrdering+" group by a.article_id order by a.ordering desc limit "+numberOfContent;
	  			sql = sql + " and a.article_id=c.id and c.published=1 and a.ordering < "+contentIdOrdering+" group by c.id order by a.ordering desc limit 1";
			  	
	  			
	  			//System.out.println("Previous Content Query --> " + sql);
				pstmt = pnconn.prepareStatement(sql);
				rs = pstmt.executeQuery();				
				if(rs.next()) {
					sb = new ContentListDTO();
					sb.setId(rs.getInt("id"));
					sb.setTitle(rs.getString("title"));	
					sb.setSefTitle(rs.getString("sef_url"));
					sb.setContentType("previous");
					moreContentData.add(sb);
					//System.out.println("Previous Content Query --> 11112");
				}
				rs=null;
				pstmt=null;
				
				//System.out.println("moreContentData -> " + moreContentData.size());		

			}
		  	sql="select c.id, c.title, c.sef_url, a.ordering from jos_content c,jos_article_section a ";
			sql = sql + catIdCondition;
  			sql = sql + " and a.article_id=c.id and c.published=1 and a.ordering > "+contentIdOrdering+" group by c.id order by a.ordering limit 1";
		  	
			//System.out.println("Next Content Query --> " + sql);
			pstmt = pnconn.prepareStatement(sql);
			rs = pstmt.executeQuery();				
			if(rs.next()) {
				sb = new ContentListDTO();
				sb.setId(rs.getInt("id"));
				sb.setTitle(rs.getString("title"));	
				sb.setSefTitle(rs.getString("sef_url"));
				sb.setContentType("next");
				moreContentData.add(sb);
			}
		} catch (Exception e) {
			System.out.println("Previous Next Content SQLException (IT WAP StoryHelper.java) -> " + e);
		} finally {
			if(rs!=null)
				rs.close();
			if(pstmt!=null)
				pstmt.close();
			if(pnconn!=null)
				pnconn.close();
		}
		return moreContentData;
	}

	
}
